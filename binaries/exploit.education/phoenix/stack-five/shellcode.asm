; based on answers here: https://stackoverflow.com/questions/15593214/linux-shellcode-hello-world

global _start

section .text

_start:
    ; rax = 1 for write in 64bit architecture
    ; write(int fd, const void *buf, size_t count);
    ; write(rdi,    rsi,             rdx)
    xor rax, rax        ; zero out rax to avoid null bytes in shellcode
    inc rax             ; interupt code 1 = write
    xor rdi, rdi        ; zero out rdi to avoid null bytes in shellcode
    inc rdi             ; stdout = 1
    lea rsi, [rsp-0x8]  ; get the address of the byte after the string, since getting the address via call ended in a segfault
    mov rbx, 0x9
    inc bl
    mov [rsi], bl       ; add a newline, since 0x0a is a bad character
    sub rsi, 0x10       ; set rsi to the beginning of the string
    xor rdx, rdx        ; zero out rdx to avoid null bytes in shellcode
    mov dl, 0x11        ; length of the string (16 bytes)
    syscall

    ; Exit
    xor rax, rax        ; zero out rax to avoid null bytes in shellcode
    mov al, 0x3c        ; interrupt code 60 = exit
    xor rdi, rdi        ; exit status is 0; zero out rdi to avoid null bytes in shellcode
    syscall

MESSAGE:
    db "Congratulations!"
